// Generated Nature bindings
// This file was automatically generated by naturebindgen

// Enum constants
int Color_C_ENUM_RED = 1
int Color_C_ENUM_GREEN = 2
int Color_C_ENUM_BLUE = 3

// Type definitions
type Callback = fn(i32, anyptr):i32
type Handler = fn(anyptr):void
type ArrayProcessor = fn(anyptr, i32):anyptr

// Union definitions
type Union_eight_bytes = [u8;8]

fn Union_eight_bytes.get_i_i32():i32 {
    return self as i32
}

fn Union_eight_bytes.set_i_i32(value i32) {
    self = value as [u8;8]
}

fn Union_eight_bytes.get_f_f32():f32 {
    return self as f32
}

fn Union_eight_bytes.set_f_f32(value f32) {
    self = value as [u8;8]
}

fn Union_eight_bytes.get_str__i8_8():[i8;8] {
    return self as [i8;8]
}

fn Union_eight_bytes.set_str__i8_8(value [i8;8]) {
    self = value as [u8;8]
}

type Union_four_bytes = [u8;4]

fn Union_four_bytes.get_count_i32():i32 {
    return self as i32
}

fn Union_four_bytes.set_count_i32(value i32) {
    self = value as [u8;4]
}

fn Union_four_bytes.get_ratio_f32():f32 {
    return self as f32
}

fn Union_four_bytes.set_ratio_f32(value f32) {
    self = value as [u8;4]
}


// Struct definitions
type Person = struct {
    [i8;50] name
    i32 age
}

type Container_point_Struct = struct {
    i32 x
    i32 y
}

type Container = struct {
    Container_point_Struct point
    i32 id
}

type Response = struct {
    Union_eight_bytes result
    i32 id
}

type ComplexStruct_info_Struct = struct {
    Union_four_bytes metric
    anyptr description
}

type ComplexStruct = struct {
    ComplexStruct_info_Struct info
    Point position
}

type Point = struct {
    i32 x
    i32 y
}

// Function bindings
#linkid do_callback
fn do_callback(anyptr reason, fn(i32, anyptr):i32 cb):i32

#linkid draw_point
fn draw_point(rawptr<Point> p)

#linkid draw_anything
fn draw_anything(anyptr data)

#linkid draw_string
fn draw_string(anyptr str)

#linkid process_person
fn process_person(rawptr<Person> person)

#linkid printf
fn printf(anyptr fmt, ...[any] args):i32

#linkid sprintf
fn sprintf(anyptr buf, anyptr fmt, ...[any] args):i32

